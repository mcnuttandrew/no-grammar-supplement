{
  "templateAuthor": "Aquila-Volans-16",
  "templateLanguage": "vega",
  "templateName": "3d Bar Chart",
  "templateDescription": "a rudimentary 3d bar chart, based on work from @mathiastiberghien",
  "disallowFanOut": false,
  "customCards": [],
  "code": "{\n  \"$schema\": \"https://vega.github.io/schema/vega/v5.json\",\n  \"width\": 600,\n  \"height\": 600,\n  \"signals\": [\n    {\n      \"name\": \"colors\",\n      \"value\": [\n        \"#77A7FB\",\n        \"#E57368\",\n        \"#FBCB43\"\n      ]\n    },\n    {\n      \"name\": \"size\",\n      \"init\": \"min(width,height)/3\"\n    },\n    {\n      \"name\": \"angle_HOR\",\n      \"on\": [\n        {\n          \"events\": {\n            \"source\": \"view\",\n            \"type\": \"mousemove\",\n            \"filter\": \"event.buttons === 1\"\n          },\n          \"update\": \"rotation_HOR + (event.movementX > 0 ? -5 : event.movementX < 0 ? 5 : 0)\"\n        }\n      ]\n    },\n    {\n      \"name\": \"validAngle_HOR\",\n      \"update\": \"angle_HOR % 360 <0 ? 360 + angle_HOR % 360 : angle_HOR % 360\"\n    },\n    {\n      \"name\": \"angle_VER\",\n      \"on\": [\n        {\n          \"events\": {\n            \"source\": \"view\",\n            \"type\": \"mousemove\",\n            \"filter\": \"event.buttons === 1\"\n          },\n          \"update\": \"rotation_VER + (event.movementY < 0 ? 5 : event.movementY > 0 ? -5 : 0)\"\n        }\n      ]\n    },\n    {\n      \"name\": \"validAngle_VER\",\n      \"update\": \"angle_VER % 360 <0 ? 360 + angle_VER % 360 : angle_VER % 360\"\n    },\n    {\n      \"name\": \"rotation_HOR\",\n      \"value\": 45,\n      \"bind\": {\n        \"input\": \"range\",\n        \"min\": 0,\n        \"max\": 360,\n        \"step\": 1\n      },\n      \"on\": [\n        {\n          \"events\": {\n            \"signal\": \"validAngle_HOR\"\n          },\n          \"update\": \"validAngle_HOR\"\n        }\n      ]\n    },\n    {\n      \"name\": \"rotation_VER\",\n      \"value\": 65,\n      \"bind\": {\n        \"input\": \"range\",\n        \"min\": 0,\n        \"max\": 360,\n        \"step\": 1\n      },\n      \"on\": [\n        {\n          \"events\": {\n            \"signal\": \"validAngle_VER\"\n          },\n          \"update\": \"validAngle_VER\"\n        }\n      ]\n    },\n    {\n      \"name\": \"scale\",\n      \"value\": 1,\n      \"bind\": {\n        \"input\": \"range\",\n        \"min\": 0,\n        \"max\": 2,\n        \"step\": 0.1\n      },\n      \"on\": [\n        {\n          \"events\": \"view:mousewheel\",\n          \"update\": \"max(0, min(2, scale + (event.wheelDelta > 0 ? 0.1 : -0.1)))\"\n        }\n      ]\n    },\n    {\n      \"name\": \"scaleX\",\n      \"value\": 2,\n      \"bind\": {\n        \"input\": \"range\",\n        \"min\": 0,\n        \"max\": 2,\n        \"step\": 0.1\n      }\n    },\n    {\n      \"name\": \"scaleY\",\n      \"value\": 2,\n      \"bind\": {\n        \"input\": \"range\",\n        \"min\": 0,\n        \"max\": 2,\n        \"step\": 0.1\n      }\n    },\n    {\n      \"name\": \"scaleZ\",\n      \"value\": 0.7,\n      \"bind\": {\n        \"input\": \"range\",\n        \"min\": 0,\n        \"max\": 2,\n        \"step\": 0.1\n      }\n    },\n    {\n      \"name\": \"paddingX\",\n      \"value\": 0.7,\n      \"bind\": {\n        \"input\": \"range\",\n        \"min\": 0,\n        \"max\": 1,\n        \"step\": 0.1\n      }\n    },\n    {\n      \"name\": \"paddingY\",\n      \"value\": 0.7,\n      \"bind\": {\n        \"input\": \"range\",\n        \"min\": 0,\n        \"max\": 1,\n        \"step\": 0.1\n      }\n    },\n    {\n      \"name\": \"qrAngle_HOR\",\n      \"init\": \"PI*rotation_HOR/360.0\",\n      \"on\": [\n        {\n          \"events\": {\n            \"signal\": \"rotation_HOR\"\n          },\n          \"update\": \"PI*rotation_HOR/360.0\"\n        }\n      ]\n    },\n    {\n      \"name\": \"qrAngle_VER\",\n      \"init\": \"PI*rotation_VER/360.0\",\n      \"on\": [\n        {\n          \"events\": {\n            \"signal\": \"rotation_VER\"\n          },\n          \"update\": \"PI*rotation_VER/360.0\"\n        }\n      ]\n    },\n    {\n      \"name\": \"qrw0\",\n      \"update\": \"cos(qrAngle_VER)\"\n    },\n    {\n      \"name\": \"qrw1\",\n      \"update\": \"cos(qrAngle_HOR)\"\n    },\n    {\n      \"name\": \"qrx0\",\n      \"update\": \"sin(qrAngle_VER)\"\n    },\n    {\n      \"name\": \"qrz1\",\n      \"update\": \"sin(qrAngle_HOR)\"\n    },\n    {\n      \"name\": \"q\",\n      \"update\": \"{x:qrx0*qrw1, y:-qrx0*qrz1, z:qrw0*qrz1, w: qrw0*qrw1}\"\n    },\n    {\n      \"name\": \"q_1\",\n      \"update\": \"{x:-q.x, y:-q.y, z: -q.z, w: q.w}\"\n    },\n    {\n      \"name\": \"isYZBack\",\n      \"update\": \"{z: 2*(q.x * q.z) - 2*(q.w * q.y)}.z < 0\"\n    },\n    {\n      \"name\": \"isXZBack\",\n      \"update\": \"{z: 2*(q.y * q.z) + 2 *(q.w * q.x)}.z < 0\"\n    },\n    {\n      \"name\": \"isXYBack\",\n      \"update\": \"{z: (q.z*q.z) - (q.y*q.y) - (q.x*q.x) + (q.w*q.w)}.z < 0\"\n    },\n    {\n      \"name\": \"hover\",\n      \"init\": \"{}\",\n      \"on\": [\n        {\n          \"events\": \"@face_xy:mousemove[event.buttons === 0],@face_xz:mousemove[event.buttons === 0],@face_yz:mousemove[event.buttons === 0]\",\n          \"update\": \"datum\"\n        },\n        {\n          \"events\": \"area:mouseout\",\n          \"update\": \"{}\"\n        }\n      ]\n    },\n    {\n      \"name\": \"hover_band_x\",\n      \"init\": \"{}\",\n      \"on\": [\n        {\n          \"events\": \"@band_x:mousemove[event.buttons === 0]\",\n          \"update\": \"datum\"\n        },\n        {\n          \"events\": \"area:mouseout\",\n          \"update\": \"{}\"\n        }\n      ]\n    },\n    {\n      \"name\": \"hover_band_y\",\n      \"init\": \"{}\",\n      \"on\": [\n        {\n          \"events\": \"@band_y:mousemove[event.buttons === 0]\",\n          \"update\": \"datum\"\n        },\n        {\n          \"events\": \"area:mouseout\",\n          \"update\": \"{}\"\n        }\n      ]\n    }\n  ],\n  \"scales\": [\n    {\n      \"name\": \"x\",\n      \"type\": \"band\",\n      \"domain\": {\n        \"data\": \"table\",\n        \"field\": \"[xDim]\"\n      },\n      \"range\": [\n        0,\n        {\n          \"signal\": \"size * scale * scaleX\"\n        }\n      ],\n      \"padding\": {\n        \"signal\": \"paddingX\"\n      }\n    },\n    {\n      \"name\": \"y\",\n      \"type\": \"band\",\n      \"domain\": {\n        \"data\": \"table\",\n        \"field\": \"[yDim]\"\n      },\n      \"range\": [\n        0,\n        {\n          \"signal\": \"size * scale * scaleY\"\n        }\n      ],\n      \"padding\": {\n        \"signal\": \"paddingY\"\n      }\n    },\n    {\n      \"name\": \"z\",\n      \"type\": \"linear\",\n      \"domain\": {\n        \"data\": \"table\",\n        \"field\": \"[zDim]\"\n      },\n      \"range\": [\n        0,\n        {\n          \"signal\": \"size * scale * scaleZ\"\n        }\n      ],\n      \"zero\": true\n    },\n    {\n      \"name\": \"colorX\",\n      \"type\": \"ordinal\",\n      \"domain\": {\n        \"data\": \"table\",\n        \"field\": \"[xDim]\"\n      },\n      \"range\": {\n        \"signal\": \"colors\"\n      }\n    }\n  ],\n  \"data\": [\n    {\n      \"name\": \"table\",\n      \"values\": \"myData\"\n    },\n    {\n      \"name\": \"source\",\n      \"source\": \"table\",\n      \"transform\": [\n        {\n          \"type\": \"formula\",\n          \"expr\": \"{x1:(scale(x, datum.[xDim]) - range(x)[1]/2), x2:(scale(x, datum.[xDim]) + bandwidth(x) - range(x)[1]/2), y1:(scale(y, datum.[yDim]) - (range(y)[1]/2)), y2: (bandwidth(y) + scale(y, datum.[yDim]) - (range(y)[1]/2) ) , z1:min(0,scale(z, datum.[zDim])) , z2: max (0, scale(z, datum.[zDim]))}\",\n          \"as\": \"points\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"[{x:datum.points.x1, y:datum.points.y2},{x: datum.points.x2, y:datum.points.y2}, {x: datum.points.x2, y:datum.points.y1},{x: datum.points.x1, y:datum.points.y1},{x:datum.points.x1, y:datum.points.y2}]\",\n          \"as\": \"xyPoints\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"[{x:datum.points.x1, z:datum.points.z2},{x: datum.points.x2, z:datum.points.z2}, {x: datum.points.x2, z:datum.points.z1},{x: datum.points.x1, z:datum.points.z1},{x:datum.points.x1, z:datum.points.z2}]\",\n          \"as\": \"xzPoints\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"[{y:datum.points.y1, z:datum.points.z2},{y: datum.points.y2, z:datum.points.z2}, {y: datum.points.y2, z:datum.points.z1},{y: datum.points.y1, z:datum.points.z1},{y:datum.points.y1, z:datum.points.z2}]\",\n          \"as\": \"yzPoints\"\n        },\n        {\n          \"type\": \"flatten\",\n          \"fields\": [\n            \"xyPoints\",\n            \"xzPoints\",\n            \"yzPoints\"\n          ],\n          \"as\": [\n            \"xy\",\n            \"xz\",\n            \"yz\"\n          ]\n        }\n      ]\n    },\n    {\n      \"name\": \"projectedPoints\",\n      \"source\": \"source\",\n      \"transform\": [\n        {\n          \"type\": \"formula\",\n          \"expr\": \"isXYBack ? datum.points.z1 : datum.points.z2\",\n          \"as\": \"usedPointZ\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"isYZBack ? datum.points.x1 : datum.points.x2\",\n          \"as\": \"usedPointX\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"isXZBack ? datum.points.y1 : datum.points.y2\",\n          \"as\": \"usedPointY\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"{x:q.w * datum.xy.x + q.y*datum.usedPointZ - q.z * datum.xy.y, y:q.w * datum.xy.y - q.x * datum.usedPointZ  + q.z*datum.xy.x, z:q.w * datum.usedPointZ  + q.x*datum.xy.y - q.y * datum.xy.x, w: -q.x * datum.xy.x - q.y * datum.xy.y - q.z * datum.usedPointZ }\",\n          \"as\": \"q1\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"{x:datum.q1.w * q_1.x + datum.q1.x * q_1.w + datum.q1.y * q_1.z - datum.q1.z * q_1.y, y:datum.q1.w * q_1.y - datum.q1.x * q_1.z + datum.q1.y * q_1.w + datum.q1.z * q_1.x, z:datum.q1.w * q_1.z + datum.q1.x * q_1.y - datum.q1.y * q_1.x + datum.q1.z * q_1.w}\",\n          \"as\": \"q2\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"(datum.q2.x) + width/2\",\n          \"as\": \"xy_x\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"(datum.q2.y) + height/2\",\n          \"as\": \"xy_y\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"(datum.q2.z) + height/2\",\n          \"as\": \"xy_z\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"{x:q.w * datum.xz.x + q.y*datum.xz.z - q.z * datum.usedPointY, y:q.w * datum.usedPointY - q.x * datum.xz.z + q.z*datum.xz.x, z:q.w * datum.xz.z + q.x*datum.usedPointY - q.y * datum.xz.x, w: -q.x * datum.xz.x - q.y * datum.usedPointY - q.z * datum.xz.z}\",\n          \"as\": \"q1\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"{x:datum.q1.w * q_1.x + datum.q1.x * q_1.w + datum.q1.y * q_1.z - datum.q1.z * q_1.y, y:datum.q1.w * q_1.y - datum.q1.x * q_1.z + datum.q1.y * q_1.w + datum.q1.z * q_1.x, z:datum.q1.w * q_1.z + datum.q1.x * q_1.y - datum.q1.y * q_1.x + datum.q1.z * q_1.w}\",\n          \"as\": \"q2\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"(datum.q2.x) + width/2\",\n          \"as\": \"xz_x\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"(datum.q2.y) + height/2\",\n          \"as\": \"xz_y\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"(datum.q2.z) + height/2\",\n          \"as\": \"xz_z\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"{x:q.w * datum.usedPointX + q.y*datum.yz.z - q.z * datum.yz.y, y:q.w * datum.yz.y - q.x * datum.yz.z + q.z*datum.usedPointX, z:q.w * datum.yz.z + q.x*datum.yz.y - q.y * datum.usedPointX, w: -q.x * datum.usedPointX - q.y * datum.yz.y - q.z * datum.yz.z}\",\n          \"as\": \"q1\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"{x:datum.q1.w * q_1.x + datum.q1.x * q_1.w + datum.q1.y * q_1.z - datum.q1.z * q_1.y, y:datum.q1.w * q_1.y - datum.q1.x * q_1.z + datum.q1.y * q_1.w + datum.q1.z * q_1.x, z:datum.q1.w * q_1.z + datum.q1.x * q_1.y - datum.q1.y * q_1.x + datum.q1.z * q_1.w}\",\n          \"as\": \"q2\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"(datum.q2.x ) + width/2\",\n          \"as\": \"yz_x\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"(datum.q2.y) + height/2\",\n          \"as\": \"yz_y\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"(datum.q2.z) + height/2\",\n          \"as\": \"yz_z\"\n        },\n        {\n          \"type\": \"window\",\n          \"ops\": [\n            \"max\",\n            \"max\",\n            \"max\"\n          ],\n          \"groupby\": [\n            \"[xDim]\",\n            \"[yDim]\",\n            \"[zDim]\"\n          ],\n          \"fields\": [\n            \"xy_z\",\n            \"xz_z\",\n            \"yz_z\"\n          ],\n          \"frame\": [\n            null,\n            null\n          ]\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"max(datum.max_xy_z, max(datum.max_xz_z, datum.max_yz_z))\",\n          \"as\": \"max_z\"\n        },\n        {\n          \"type\": \"project\",\n          \"fields\": [\n            \"[xDim]\",\n            \"[yDim]\",\n            \"[zDim]\",\n            \"xy_x\",\n            \"xy_y\",\n            \"xz_x\",\n            \"xz_y\",\n            \"yz_x\",\n            \"yz_y\",\n            \"max_z\"\n          ]\n        },\n        {\n          \"type\": \"collect\",\n          \"sort\": {\n            \"field\": [\n              \"max_z\"\n            ]\n          }\n        }\n      ]\n    },\n    {\n      \"name\": \"ground\",\n      \"values\": [\n        {\n          \"points\": {\n            \"x1\": -93.33333333333333,\n            \"x2\": 93.33333333333333,\n            \"y1\": -133.33333333333334,\n            \"y2\": 133.33333333333334,\n            \"z2\": 0\n          },\n          \"xyPoints\": [\n            {\n              \"x\": -93.33333333333333,\n              \"y\": 133.33333333333334\n            },\n            {\n              \"x\": 93.33333333333333,\n              \"y\": 133.33333333333334\n            },\n            {\n              \"x\": 93.33333333333333,\n              \"y\": -133.33333333333334\n            },\n            {\n              \"x\": -93.33333333333333,\n              \"y\": -133.33333333333334\n            },\n            {\n              \"x\": -93.33333333333333,\n              \"y\": 133.33333333333334\n            }\n          ]\n        }\n      ],\n      \"transform\": [\n        {\n          \"type\": \"formula\",\n          \"expr\": \"{x1:-(range(x)[1])/2, x2:(range(x)[1])/2, y1:-(range(y)[1])/2, y2:(range(y)[1])/2, z2:0}\",\n          \"as\": \"points\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"[{x:datum.points.x1, y:datum.points.y2},{x: datum.points.x2, y:datum.points.y2}, {x: datum.points.x2, y:datum.points.y1},{x: datum.points.x1, y:datum.points.y1},{x:datum.points.x1, y:datum.points.y2}]\",\n          \"as\": \"xyPoints\"\n        },\n        {\n          \"type\": \"flatten\",\n          \"fields\": [\n            \"xyPoints\"\n          ],\n          \"as\": [\n            \"xy\"\n          ]\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"{x:q.w * datum.xy.x + q.y*datum.points.z2 - q.z * datum.xy.y, y:q.w * datum.xy.y - q.x * datum.points.z2 + q.z*datum.xy.x, z:q.w * datum.points.z2 + q.x*datum.xy.y - q.y * datum.xy.x, w: -q.x * datum.xy.x - q.y * datum.xy.y - q.z * datum.points.z2}\",\n          \"as\": \"q1\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"{x:datum.q1.w * q_1.x + datum.q1.x * q_1.w + datum.q1.y * q_1.z - datum.q1.z * q_1.y, y:datum.q1.w * q_1.y - datum.q1.x * q_1.z + datum.q1.y * q_1.w + datum.q1.z * q_1.x}\",\n          \"as\": \"q2\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"(datum.q2.x ) + width/2\",\n          \"as\": \"x\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"(datum.q2.y ) + height/2\",\n          \"as\": \"y\"\n        }\n      ]\n    },\n    {\n      \"name\": \"values\",\n      \"source\": \"table\",\n      \"transform\": [\n        {\n          \"type\": \"formula\",\n          \"expr\": \"{x1:(scale(x, datum.[xDim]) - range(x)[1]/2), x2:(scale(x, datum.[xDim]) + bandwidth(x) - range(x)[1]/2), y1:(scale(y, datum.[yDim]) - (range(y)[1]/2)), y2: (bandwidth(y) + scale(y, datum.[yDim]) - (range(y)[1]/2) ) , z1:0 , z2: (scale(z, (datum.[zDim] + 10)))}\",\n          \"as\": \"points\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"{x:datum.points.x1 + (datum.points.x2 - datum.points.x1)/2, y:datum.points.y1}\",\n          \"as\": \"xy\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"{x:q.w * datum.xy.x + q.y*datum.points.z2 - q.z * datum.xy.y, y:q.w * datum.xy.y - q.x * datum.points.z2 + q.z*datum.xy.x, z:q.w * datum.points.z2 + q.x*datum.xy.y - q.y * datum.xy.x, w: -q.x * datum.xy.x - q.y * datum.xy.y - q.z * datum.points.z2}\",\n          \"as\": \"q1\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"{x:datum.q1.w * q_1.x + datum.q1.x * q_1.w + datum.q1.y * q_1.z - datum.q1.z * q_1.y, y:datum.q1.w * q_1.y - datum.q1.x * q_1.z + datum.q1.y * q_1.w + datum.q1.z * q_1.x}\",\n          \"as\": \"q2\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"(datum.q2.x ) + width/2\",\n          \"as\": \"x\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"(datum.q2.y ) + height/2\",\n          \"as\": \"y\"\n        }\n      ]\n    },\n    {\n      \"name\": \"[yDims]\",\n      \"source\": \"table\",\n      \"transform\": [\n        {\n          \"type\": \"project\",\n          \"fields\": [\n            \"[yDim]\"\n          ]\n        },\n        {\n          \"type\": \"aggregate\",\n          \"groupby\": [\n            \"[yDim]\"\n          ]\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"(isValid(hover.[yDim]) && hover.[yDim] === datum.[yDim]) || (isValid(hover_band_y.[yDim]) && hover_band_y.[yDim] === datum.[yDim]) ? 40 : 10\",\n          \"as\": \"usedOffset\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"{x1: -datum.usedOffset - range(x)[1]/2, x2: datum.usedOffset + range(x)[1]/2, y1:(scale(y, datum.[yDim]) - (range(y)[1]/2)), y2: (bandwidth(y) + scale(y, datum.[yDim]) - (range(y)[1]/2) ) , z1:0 , z2: 0}\",\n          \"as\": \"points\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"isYZBack ? datum.points.x1 : datum.points.x2\",\n          \"as\": \"usedX\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"[{x: datum.usedX, y:datum.points.y1}]\",\n          \"as\": \"xyPoints\"\n        },\n        {\n          \"type\": \"flatten\",\n          \"fields\": [\n            \"xyPoints\"\n          ],\n          \"as\": [\n            \"xy\"\n          ]\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"{x:q.w * datum.xy.x + q.y*datum.points.z2 - q.z * datum.xy.y, y:q.w * datum.xy.y - q.x * datum.points.z2 + q.z*datum.xy.x, z:q.w * datum.points.z2 + q.x*datum.xy.y - q.y * datum.xy.x, w: -q.x * datum.xy.x - q.y * datum.xy.y - q.z * datum.points.z2}\",\n          \"as\": \"q1\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"{x:datum.q1.w * q_1.x + datum.q1.x * q_1.w + datum.q1.y * q_1.z - datum.q1.z * q_1.y, y:datum.q1.w * q_1.y - datum.q1.x * q_1.z + datum.q1.y * q_1.w + datum.q1.z * q_1.x}\",\n          \"as\": \"q2\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"(datum.q2.x ) + width/2\",\n          \"as\": \"x\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"(datum.q2.y ) + height/2\",\n          \"as\": \"y\"\n        }\n      ]\n    },\n    {\n      \"name\": \"[xDim]s\",\n      \"source\": \"table\",\n      \"transform\": [\n        {\n          \"type\": \"project\",\n          \"fields\": [\n            \"[xDim]\"\n          ]\n        },\n        {\n          \"type\": \"aggregate\",\n          \"groupby\": [\n            \"[xDim]\"\n          ]\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"(isValid(hover.[xDim]) && hover.[xDim] === datum.[xDim]) || (isValid(hover_band_x) && hover_band_x.[xDim] === datum.[xDim]) ? 40 : 10\",\n          \"as\": \"usedOffset\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"{y1: -datum.usedOffset - range(y)[1]/2, y2: datum.usedOffset + range(y)[1]/2, x1:(scale(x, datum.[xDim]) - (range(x)[1]/2)), x2: (bandwidth(x) + scale(x, datum.[xDim]) - (range(x)[1]/2) ) , z1:0 , z2: 0}\",\n          \"as\": \"points\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"[{x:datum.points.x1 + (datum.points.x2 - datum.points.x1)/2, y:isXZBack ? datum.points.y1 : datum.points.y2}]\",\n          \"as\": \"xyPoints\"\n        },\n        {\n          \"type\": \"flatten\",\n          \"fields\": [\n            \"xyPoints\"\n          ],\n          \"as\": [\n            \"xy\"\n          ]\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"{x:q.w * datum.xy.x + q.y*datum.points.z2 - q.z * datum.xy.y, y:q.w * datum.xy.y - q.x * datum.points.z2 + q.z*datum.xy.x, z:q.w * datum.points.z2 + q.x*datum.xy.y - q.y * datum.xy.x, w: -q.x * datum.xy.x - q.y * datum.xy.y - q.z * datum.points.z2}\",\n          \"as\": \"q1\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"{x:datum.q1.w * q_1.x + datum.q1.x * q_1.w + datum.q1.y * q_1.z - datum.q1.z * q_1.y, y:datum.q1.w * q_1.y - datum.q1.x * q_1.z + datum.q1.y * q_1.w + datum.q1.z * q_1.x}\",\n          \"as\": \"q2\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"(datum.q2.x ) + width/2\",\n          \"as\": \"x\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"(datum.q2.y ) + height/2\",\n          \"as\": \"y\"\n        }\n      ]\n    },\n    {\n      \"name\": \"[xDim]_bands\",\n      \"source\": \"[xDim]s\",\n      \"transform\": [\n        {\n          \"type\": \"project\",\n          \"fields\": [\n            \"[xDim]\"\n          ]\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"{y1: -range(y)[1]/2, y2: range(y)[1]/2, x1:(scale(x, datum.[xDim]) - (range(x)[1]/2)), x2: (bandwidth(x) + scale(x, datum.[xDim]) - (range(x)[1]/2) ) , z1:0 , z2: 0}\",\n          \"as\": \"points\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"[{x:datum.points.x1, y: datum.points.y1},{x:datum.points.x2, y: datum.points.y1},{x:datum.points.x2, y: datum.points.y2},{x:datum.points.x1, y: datum.points.y2},{x:datum.points.x1, y: datum.points.y1}]\",\n          \"as\": \"xyPoints\"\n        },\n        {\n          \"type\": \"flatten\",\n          \"fields\": [\n            \"xyPoints\"\n          ],\n          \"as\": [\n            \"xy\"\n          ]\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"{x:q.w * datum.xy.x + q.y*datum.points.z2 - q.z * datum.xy.y, y:q.w * datum.xy.y - q.x * datum.points.z2 + q.z*datum.xy.x, z:q.w * datum.points.z2 + q.x*datum.xy.y - q.y * datum.xy.x, w: -q.x * datum.xy.x - q.y * datum.xy.y - q.z * datum.points.z2}\",\n          \"as\": \"q1\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"{x:datum.q1.w * q_1.x + datum.q1.x * q_1.w + datum.q1.y * q_1.z - datum.q1.z * q_1.y, y:datum.q1.w * q_1.y - datum.q1.x * q_1.z + datum.q1.y * q_1.w + datum.q1.z * q_1.x}\",\n          \"as\": \"q2\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"(datum.q2.x ) + width/2\",\n          \"as\": \"x\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"(datum.q2.y ) + height/2\",\n          \"as\": \"y\"\n        }\n      ]\n    },\n    {\n      \"name\": \"[yDim_bands]\",\n      \"source\": \"[yDims]\",\n      \"transform\": [\n        {\n          \"type\": \"project\",\n          \"fields\": [\n            \"[yDim]\"\n          ]\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"{x1: - range(x)[1]/2, x2: range(x)[1]/2, y1:(scale(y, datum.[yDim]) - (range(y)[1]/2)), y2: (bandwidth(y) + scale(y, datum.[yDim]) - (range(y)[1]/2) ) , z1:0 , z2: 0}\",\n          \"as\": \"points\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"[{x:datum.points.x1, y: datum.points.y1},{x:datum.points.x2, y: datum.points.y1},{x:datum.points.x2, y: datum.points.y2},{x:datum.points.x1, y: datum.points.y2},{x:datum.points.x1, y: datum.points.y1}]\",\n          \"as\": \"xyPoints\"\n        },\n        {\n          \"type\": \"flatten\",\n          \"fields\": [\n            \"xyPoints\"\n          ],\n          \"as\": [\n            \"xy\"\n          ]\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"{x:q.w * datum.xy.x + q.y*datum.points.z2 - q.z * datum.xy.y, y:q.w * datum.xy.y - q.x * datum.points.z2 + q.z*datum.xy.x, z:q.w * datum.points.z2 + q.x*datum.xy.y - q.y * datum.xy.x, w: -q.x * datum.xy.x - q.y * datum.xy.y - q.z * datum.points.z2}\",\n          \"as\": \"q1\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"{x:datum.q1.w * q_1.x + datum.q1.x * q_1.w + datum.q1.y * q_1.z - datum.q1.z * q_1.y, y:datum.q1.w * q_1.y - datum.q1.x * q_1.z + datum.q1.y * q_1.w + datum.q1.z * q_1.x}\",\n          \"as\": \"q2\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"(datum.q2.x ) + width/2\",\n          \"as\": \"x\"\n        },\n        {\n          \"type\": \"formula\",\n          \"expr\": \"(datum.q2.y ) + height/2\",\n          \"as\": \"y\"\n        }\n      ]\n    }\n  ],\n  \"marks\": [\n    {\n      \"type\": \"area\",\n      \"from\": {\n        \"data\": \"ground\"\n      },\n      \"encode\": {\n        \"update\": {\n          \"fill\": {\n            \"value\": \"grey\"\n          },\n          \"opacity\": [\n            {\n              \"test\": \"isXYBack\",\n              \"value\": 0.1\n            },\n            {\n              \"value\": 0.3\n            }\n          ],\n          \"x\": [\n            {\n              \"field\": \"x\"\n            }\n          ],\n          \"y\": [\n            {\n              \"field\": \"y\"\n            }\n          ],\n          \"y2\": {\n            \"value\": 0\n          }\n        }\n      }\n    },\n    {\n      \"type\": \"group\",\n      \"from\": {\n        \"facet\": {\n          \"name\": \"bands_x\",\n          \"data\": \"[xDim]_bands\",\n          \"groupby\": [\n            \"[xDim]\"\n          ]\n        }\n      },\n      \"marks\": [\n        {\n          \"type\": \"area\",\n          \"name\": \"band_x\",\n          \"interactive\": true,\n          \"from\": {\n            \"data\": \"bands_x\"\n          },\n          \"encode\": {\n            \"update\": {\n              \"fill\": [\n                {\n                  \"test\": \"isValid(hover_band_x.[xDim]) && datum.[xDim] === hover_band_x.[xDim]\",\n                  \"value\": \"grey\"\n                },\n                {\n                  \"test\": \"isValid(hover.[xDim]) && datum.[xDim] === hover.[xDim]\",\n                  \"value\": \"grey\"\n                },\n                {\n                  \"value\": \"transparent\"\n                }\n              ],\n              \"x\": [\n                {\n                  \"field\": \"x\"\n                }\n              ],\n              \"y\": [\n                {\n                  \"field\": \"y\"\n                }\n              ],\n              \"y2\": {\n                \"value\": 0\n              },\n              \"opacity\": {\n                \"value\": 0.2\n              }\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"type\": \"group\",\n      \"from\": {\n        \"facet\": {\n          \"name\": \"bands_y\",\n          \"data\": \"[yDim_bands]\",\n          \"groupby\": [\n            \"[yDim]\"\n          ]\n        }\n      },\n      \"marks\": [\n        {\n          \"type\": \"area\",\n          \"name\": \"band_y\",\n          \"interactive\": true,\n          \"from\": {\n            \"data\": \"bands_y\"\n          },\n          \"encode\": {\n            \"update\": {\n              \"fill\": [\n                {\n                  \"test\": \"isValid(hover_band_y.[yDim]) && datum.[yDim] === hover_band_y.[yDim]\",\n                  \"value\": \"grey\"\n                },\n                {\n                  \"test\": \"isValid(hover.[yDim]) && datum.[yDim] === hover.[yDim]\",\n                  \"value\": \"grey\"\n                },\n                {\n                  \"value\": \"transparent\"\n                }\n              ],\n              \"x\": [\n                {\n                  \"field\": \"x\"\n                }\n              ],\n              \"y\": [\n                {\n                  \"field\": \"y\"\n                }\n              ],\n              \"y2\": {\n                \"value\": 0\n              },\n              \"opacity\": {\n                \"value\": 0.2\n              }\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"type\": \"group\",\n      \"from\": {\n        \"facet\": {\n          \"name\": \"bars\",\n          \"data\": \"projectedPoints\",\n          \"groupby\": [\n            \"[xDim]\",\n            \"[yDim]\",\n            \"[zDim]\",\n            \"max_z\"\n          ]\n        }\n      },\n      \"marks\": [\n        {\n          \"type\": \"area\",\n          \"name\": \"face_yz\",\n          \"from\": {\n            \"data\": \"bars\"\n          },\n          \"encode\": {\n            \"enter\": {},\n            \"update\": {\n              \"fill\": {\n                \"field\": \"[xDim]\",\n                \"scale\": \"colorX\"\n              },\n              \"x\": {\n                \"field\": \"yz_x\"\n              },\n              \"y\": {\n                \"field\": \"yz_y\"\n              },\n              \"y2\": {\n                \"value\": 0\n              },\n              \"opacity\": [\n                {\n                  \"test\": \"isValid(hover.[xDim]) && (datum.[xDim] !== hover.[xDim] || datum.[yDim] !== hover.[yDim])\",\n                  \"value\": 0.3\n                },\n                {\n                  \"test\": \"isValid(hover_band_x.[xDim]) && datum.[xDim] !== hover_band_x.[xDim]\",\n                  \"value\": 0.3\n                },\n                {\n                  \"test\": \"isValid(hover_band_y.[yDim]) && datum.[yDim] !== hover_band_y.[yDim]\",\n                  \"value\": 0.3\n                }\n              ]\n            }\n          }\n        },\n        {\n          \"type\": \"area\",\n          \"name\": \"face_xz\",\n          \"from\": {\n            \"data\": \"bars\"\n          },\n          \"encode\": {\n            \"enter\": {},\n            \"update\": {\n              \"fill\": [\n                {\n                  \"signal\": \"hcl(hcl(scale(colorX,datum.[xDim])).h, hcl(scale(colorX,datum.[xDim])).c, 50 )\"\n                }\n              ],\n              \"x\": {\n                \"field\": \"xz_x\"\n              },\n              \"y\": {\n                \"field\": \"xz_y\"\n              },\n              \"y2\": {\n                \"value\": 0\n              },\n              \"opacity\": [\n                {\n                  \"test\": \"isValid(hover.[xDim]) && (datum.[xDim] !== hover.[xDim] || datum.[yDim] !== hover.[yDim])\",\n                  \"value\": 0.3\n                },\n                {\n                  \"test\": \"isValid(hover_band_x.[xDim]) && datum.[xDim] !== hover_band_x.[xDim]\",\n                  \"value\": 0.3\n                },\n                {\n                  \"test\": \"isValid(hover_band_y.[yDim]) && datum.[yDim] !== hover_band_y.[yDim]\",\n                  \"value\": 0.3\n                }\n              ]\n            }\n          }\n        },\n        {\n          \"type\": \"area\",\n          \"name\": \"face_xy\",\n          \"from\": {\n            \"data\": \"bars\"\n          },\n          \"encode\": {\n            \"enter\": {},\n            \"update\": {\n              \"fill\": {\n                \"signal\": \"hcl(hcl(scale(colorX,datum.[xDim])).h, hcl(scale(colorX,datum.[xDim])).c, isXYBack ? 80 : 30)\"\n              },\n              \"x\": {\n                \"field\": \"xy_x\"\n              },\n              \"y\": {\n                \"field\": \"xy_y\"\n              },\n              \"y2\": {\n                \"value\": 0\n              },\n              \"opacity\": [\n                {\n                  \"test\": \"isValid(hover.[xDim]) && (datum.[xDim] !== hover.[xDim] || datum.[yDim] !== hover.[yDim])\",\n                  \"value\": 0.1\n                },\n                {\n                  \"test\": \"isValid(hover_band_x.[xDim]) && datum.[xDim] !== hover_band_x.[xDim]\",\n                  \"value\": 0.3\n                },\n                {\n                  \"test\": \"isValid(hover_band_y.[yDim]) && datum.[yDim] !== hover_band_y.[yDim]\",\n                  \"value\": 0.3\n                }\n              ]\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"type\": \"text\",\n      \"from\": {\n        \"data\": \"values\"\n      },\n      \"encode\": {\n        \"enter\": {\n          \"align\": {\n            \"value\": \"center\"\n          }\n        },\n        \"update\": {\n          \"text\": {\n            \"field\": \"[zDim]\"\n          },\n          \"x\": {\n            \"field\": \"x\"\n          },\n          \"y\": {\n            \"field\": \"y\"\n          },\n          \"opacity\": [\n            {\n              \"test\": \"isValid(hover.[xDim]) && hover.[xDim] === datum.[xDim] && hover.[yDim] === datum.[yDim]\",\n              \"value\": 1\n            },\n            {\n              \"test\": \"isValid(hover_band_x.[xDim]) && hover_band_x.[xDim] === datum.[xDim]\",\n              \"value\": 1\n            },\n            {\n              \"test\": \"isValid(hover_band_y.[yDim]) && datum.[yDim] === hover_band_y.[yDim]\",\n              \"value\": 1\n            },\n            {\n              \"value\": 0\n            }\n          ]\n        }\n      }\n    },\n    {\n      \"type\": \"text\",\n      \"from\": {\n        \"data\": \"[yDims]\"\n      },\n      \"encode\": {\n        \"enter\": {\n          \"align\": {\n            \"value\": \"center\"\n          }\n        },\n        \"update\": {\n          \"text\": {\n            \"field\": \"[yDim]\"\n          },\n          \"x\": {\n            \"field\": \"x\"\n          },\n          \"y\": {\n            \"field\": \"y\"\n          },\n          \"fontSize\": [\n            {\n              \"test\": \"isValid(hover.[yDim]) && hover.[yDim] === datum.[yDim]\",\n              \"value\": 25\n            },\n            {\n              \"test\": \"isValid(hover_band_y.[yDim]) && datum.[yDim] === hover_band_y.[yDim]\",\n              \"value\": 25\n            },\n            {\n              \"value\": 12\n            }\n          ],\n          \"fill\": [\n            {\n              \"test\": \"isValid(hover.[yDim]) && hover.[yDim] === datum.[yDim]\",\n              \"value\": \"green\"\n            },\n            {\n              \"test\": \"isValid(hover_band_y.[yDim]) && datum.[yDim] === hover_band_y.[yDim]\",\n              \"value\": \"green\"\n            },\n            {\n              \"value\": \"black\"\n            }\n          ],\n          \"fontWeight\": [\n            {\n              \"test\": \"isValid(hover.[yDim]) && hover.[yDim] === datum.[yDim]\",\n              \"value\": \"bold\"\n            },\n            {\n              \"test\": \"isValid(hover_band_y.[yDim]) && datum.[yDim] === hover_band_y.[yDim]\",\n              \"value\": \"bold\"\n            }\n          ]\n        }\n      }\n    },\n    {\n      \"type\": \"text\",\n      \"from\": {\n        \"data\": \"[xDim]s\"\n      },\n      \"encode\": {\n        \"enter\": {\n          \"align\": {\n            \"value\": \"center\"\n          }\n        },\n        \"update\": {\n          \"text\": {\n            \"field\": \"[xDim]\"\n          },\n          \"x\": {\n            \"field\": \"x\"\n          },\n          \"y\": {\n            \"field\": \"y\"\n          },\n          \"fontSize\": [\n            {\n              \"test\": \"isValid(hover.[xDim]) && hover.[xDim] === datum.[xDim]\",\n              \"value\": 25\n            },\n            {\n              \"test\": \"isValid(hover_band_x.[xDim]) && hover_band_x.[xDim] === datum.[xDim]\",\n              \"value\": 25\n            },\n            {\n              \"value\": 12\n            }\n          ],\n          \"fill\": [\n            {\n              \"test\": \"isValid(hover.[xDim]) && hover.[xDim] === datum.[xDim]\",\n              \"value\": \"green\"\n            },\n            {\n              \"test\": \"isValid(hover_band_x.[xDim]) && hover_band_x.[xDim] === datum.[xDim]\",\n              \"value\": \"green\"\n            },\n            {\n              \"value\": \"black\"\n            }\n          ],\n          \"fontWeight\": [\n            {\n              \"test\": \"isValid(hover.[xDim]) && hover.[xDim] === datum.[xDim]\",\n              \"value\": \"bold\"\n            },\n            {\n              \"test\": \"isValid(hover_band_x.[xDim]) && hover_band_x.[xDim] === datum.[xDim]\",\n              \"value\": \"bold\"\n            }\n          ]\n        }\n      }\n    }\n  ]\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "widgets": [
    {
      "name": "xDim",
      "type": "DataTarget",
      "config": {
        "allowedTypes": [
          "DIMENSION"
        ],
        "required": true
      }
    },
    {
      "name": "yDim",
      "type": "DataTarget",
      "config": {
        "allowedTypes": [
          "MEASURE"
        ],
        "required": true
      }
    },
    {
      "name": "zDim",
      "type": "DataTarget",
      "config": {
        "allowedTypes": [
          "MEASURE"
        ],
        "required": true
      }
    }
  ]
}